<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>휴빌론 출입 관제</title>
    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>
    <!-- Bootstrap 3.3.2 -->
    <link href="/static/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- Font Awesome Icons -->
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
    <!-- Ionicons -->
    <link href="http://code.ionicframework.com/ionicons/2.0.0/css/ionicons.min.css" rel="stylesheet" type="text/css" />
    <!-- DATA TABLES -->
    <link href="/static/plugins/datatables/dataTables.bootstrap.css" rel="stylesheet" type="text/css" />
    <!-- Theme style -->
    <link href="/static/dist/css/AdminLTE.min.css" rel="stylesheet" type="text/css" />
    <!-- AdminLTE Skins. Choose a skin from the css/skins 
         folder instead of downloading all of them to reduce the load. -->
    <link href="/static/dist/css/skins/_all-skins.min.css" rel="stylesheet" type="text/css" />
    
    <!-- searchBox css-->
    <link href="/static/dist/css/searchBox.css" rel="stylesheet" type="text/css" />  

    <!--toggle button css-->
    <link href="/static/dist/css/toggleBtn2.css" rel="stylesheet" type="text/css" />   

  

    <script src="../socket.io-client/dist/socket.io.js"></script>
    <style>
      .skin-blue .main-header .navbar{
        background-color: #557ac2 !important;
      }
      .skin-blue .main-header .logo{
        background-color: #365799 !important
      }
      .dataTables_filter{
        display: none;
      }
      #status-data{
        float: right;
        padding-right: 20px;
      }
      .loc-img{
        width: 25px;
        top: -5px;
        position: relative;
      }

      .form-check{
        padding-top: 9px;
      }
      #map {
          width: 100%;
          height: 100%;
      }
      #map-container{
        padding-top:20px;
        /* padding-bottom: 5px; */
        width: 97%;
        height: 790px;
        margin: 0 auto;
      } 
      #floating-panel {
        position: absolute;
        top: 35px;
        left: 56%;
        z-index: 5;
        padding: 5px;
        background : white;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        /* line-height: 30px; */
      }
      .chk-la{
        padding-right: 15px;
      }
      .tb-h{
        background: #d2d6de;
      }
      tr, td{
        border: 1px solid #d2d6de !important;
      }
      table#user-info td{
       text-align: left;
      }
      table#user-info td.user-t{
       width:30%;
       text-align: center !important;
      }
      #user-color{
        color : #fff;
      }

 @supports (-webkit-appearance: none) or (-moz-appearance: none) {
  input[type='checkbox'],
  input[type='radio'] {
    --active: #fff;
    --active-inner: #275EFE;
    --focus: 0px rgba(39, 94, 254, .3);
    --border: #494f70;
    --border-hover: #275EFE;
    --background: #fff;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid #494f70;
    background: var(--b, var(--background));
    -webkit-transition: background .3s, border-color .3s, box-shadow .2s;
    transition: background .3s, border-color .3s, box-shadow .2s;
    margin-top: 8px;
  }
  input[type='checkbox']:after,
  input[type='radio']:after {
    content: '';
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    -webkit-transition: opacity var(--d-o, 0.2s), -webkit-transform var(--d-t, 0.3s) var(--d-t-e, ease);
    transition: opacity var(--d-o, 0.2s), -webkit-transform var(--d-t, 0.3s) var(--d-t-e, ease);
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s), -webkit-transform var(--d-t, 0.3s) var(--d-t-e, ease);
  }
  input[type='checkbox']:checked,
  input[type='radio']:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: .3s;
    --d-t: .6s;
    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
  }
  input[type='checkbox']:disabled,
  input[type='radio']:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: .9;
  }
  input[type='checkbox']:disabled:checked,
  input[type='radio']:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }
  input[type='checkbox']:disabled + label,
  input[type='radio']:disabled + label {
    cursor: not-allowed;
  }
  input[type='checkbox']:hover:not(:checked):not(:disabled),
  input[type='radio']:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }
  input[type='checkbox']:focus,
  input[type='radio']:focus {
    box-shadow: 0 0 0 var(--focus);
  }
  input[type='checkbox']:not(.switch),
  input[type='radio']:not(.switch) {
    width: 21px;
  }
  input[type='checkbox']:not(.switch):after,
  input[type='radio']:not(.switch):after {
    opacity: var(--o, 0);
  }
  input[type='checkbox']:not(.switch):checked,
  input[type='radio']:not(.switch):checked {
    --o: 1;
  }
  input[type='checkbox'] + label,
  input[type='radio'] + label {
    font-size: 16px;
    line-height: 21px;
    display: inline-block;
    vertical-align: top;
    cursor: pointer;
    padding-top: 9px;
  }

  input[type='checkbox']:not(.switch) {
    border-radius: 7px;
  }
  input[type='checkbox']:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    -webkit-transform: rotate(var(--r, 20deg));
            transform: rotate(var(--r, 20deg));
  }
  input[type='checkbox']:not(.switch):checked {
    --r: 43deg;
  }
  input[type='checkbox'].switch {
    width: 38px;
    border-radius: 11px;
  }
  input[type='checkbox'].switch:after {
    left: 2px;
    top: 2px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background: var(--ab, var(--border));
    -webkit-transform: translateX(var(--x, 0));
            transform: translateX(var(--x, 0));
  }
  input[type='checkbox'].switch:checked {
    --ab: var(--active-inner);
    --x: 17px;
  }
  input[type='checkbox'].switch:disabled:not(:checked):after {
    opacity: .6;
  }

}



    </style>
  </head>
  <body class="skin-blue">
    <div class="wrapper">
      
      <header class="main-header">
        <!-- Logo -->
        <a href="/" class="logo"><b>휴빌론 출입자 관제</b></a>
        <!-- Header Navbar: style can be found in header.less -->
        <nav class="navbar navbar-static-top" role="navigation">
          <!-- Sidebar toggle button-->
          <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button">
            <span class="sr-only">Toggle navigation</span>
          </a>
    
        </nav>
      </header>
      <!-- Left side column. contains the logo and sidebar -->
      <aside class="main-sidebar">
        <!-- sidebar: style can be found in sidebar.less -->
        <section class="sidebar">
          <!-- Sidebar user panel -->
          <div class="user-panel">
            <div class="pull-left image" style="width: 110px; background-color:white; text-align: center;">
              <img src="/static/images/hubilon-logo.png" class="" alt="User Image"   style="background-color:white; width: 100px !important"/>
            </div>
            <div class="pull-left info">
              <p>admin</p>
              <a href="#"><i class="fa fa-circle text-success"></i> Online</a>
            </div>
          </div>
          <ul class="sidebar-menu">
            <li class="header">MAIN NAVIGATION</li>
            <li class="active treeview">
              <a href="/vstrLocation/google">
                <i class="fa fa-map-marker"></i> <span>출입자 위치</span>
              </a>
            </li>
            <li class="treeview">
              <a href="/vstrStatus">
                <i class="fa fa-table"></i> <span>출입자 현황</span>
              </a>
            </li>
            <li class="treeview">
                <a href="/scrtZone/add">
                  <i class="fa  fa-warning"></i> <span>보안구역 등록</span>  
                </a>
              </li>
              <li class="treeview">
                <a href="/scrtZone/list">
                  <i class="fa fa-gear"></i> <span>보안구역 관리</span>  
                </a>
              </li>
              <li class="treeview">
                <a href="/user/enroll">
                  <i class="fa fa-user"></i> <span>사용자 등록</span>  
                </a>
              </li>
              <li class="treeview">
                <a href="/user/list">
                  <i class="fa fa-users"></i> <span>사용자 관리</span>
                </a>
              </li>
          </ul>
        </section>
        <!-- /.sidebar -->
      </aside>

      <!-- Right side column. Contains the navbar and content of the page -->
      <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
          <h1>
            출입자 위치
          </h1>
          <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#">출입자 위치</a></li>
          </ol>
        </section>

        <!-- Main content -->
        <section class="content">
          <div class="row">
            <div class="col-xs-12">
              <div class="box">
                <div class="box-header">
                  <!-- <h3 class="box-title">Data Table With Full Features</h3> -->
                </div><!-- /.box-header -->
                <div class="box-body">
                  <!--검색창-->
                    <div class="search__container">
                      <input class="search__input" type="text" placeholder="출입자 번호를 입력하세요. ex)01012345678" onkeyup="search(this);">
                      
                    </div>
           
                  <div calss="dataTables_wrapper form-inline" role="grid">
                    <div class="row">
                      <div class="col-xs-12">
                        <!--출입자 상태-->
                        <div id="status-data">
                           <!-- checkbox -->
                          <div class="form-group checkbox-container " style="margin-top:25px !important; margin-bottom:0px !important;">
                            <input type="checkbox" class="" id="checkedAll"  checked/>
                            <label class="chk-la" for='checkedAll' >
                              <span class="loc-container"></span>전체
                            </label>
                             <input type="checkbox" class="chk-sub" id="c1" value="VSCD002" checked/>
                             <label class="chk-la" for='c1' >
                               <span class="loc-container"></span><img class="loc-img" src="/static/images/L1.png" alt="" >1층 출입
                             </label>
                             <input type="checkbox"  class="chk-sub" id='c2' value="VSCD003" checked/>
                             <label class="chk-la" for='c2'>
                               <span class="loc-container"></span><img class="loc-img" src="/static/images/L2.png" alt="" >정상출입
                             </label>
                             <input type="checkbox" class="chk-sub" id='c3' value="VSCD004" checked/>
                             <label class="chk-la" for='c3'>
                               <span class="loc-container"></span><img class="loc-img" src="/static/images/L3.png" alt="">보안구역부근
                             </label>
                             <input type="checkbox" class="chk-sub" id='c4' value="VSCD005" checked/>
                             <label class="chk-la" for='c4'>
                               <span class="loc-container"></span><img class="loc-img" src="/static/images/L4.png" alt="">보안구역진입
                             </label>
                          </div>
                        </div>
                      </div>
                      


                    </div>
                  </div>

                </div><!-- /.box-body -->
              </div><!-- /.box -->
              <div class="row">
                <div class="col-md-8">
                  <div class="box">
                    <div class="box-body">
                            <!--구글 지도-->
                              <div id="map-container">
                                <!--토글 버튼(1층 or 5층)-->
                                <div id="floating-panel">
                                  <input id="toggle-on" class="toggle toggle-left" name="toggle" value="false" type="radio" onclick="removeOverlay();">
                                  <label for="toggle-on" class="btn">1F</label>
                                  <input id="toggle-off" class="toggle toggle-right" name="toggle" value="true" type="radio" onclick="addOverlay();" checked>
                                  <label for="toggle-off" class="btn">5F</label>

                                </div>
                                갱신 시간
                                <input type="number"  style="text-align:right; width:70px;" min ="1" id="update-scd" value="<%=time%>" placeholder="<%=time%>">(단위 : 초)
                                <button id="up-scd-btn">설정</button>
                                <!--지도-->
                                <div id="map"></div>

                                <div id="map2"></div>
                              </div>
                            <!--구글 지도 끝-->
                      </div>
                    </div>
                  </div>
                <div class="col-md-4">
                  <!--출입자 현황-->
                  <div class="box">
                    <div class="box-body">
                       <!--1층-->
                            <table class="table table-bordered" style="text-align:center; margin-bottom:20px;">
                              <tbody>
                              <tr>
                                <th colspan="2" class="tb-h" style="text-align: center; font-size:18px;">1층</th>
                              </tr>
                              <tr>
                                <td style="width:70%;  font-weight: 600;">전체출입자</td>
                                <td style="font-weight: 600;"><%=floorInfo_1F.cnt_all_1%>명</td>
                              </tr>
                            </tbody>
                          </table>
                         <!--5층-->
                         <table class="table table-bordered" style="text-align:center; margin-bottom:20px;">
                          <tbody>
                          <tr>
                            <th colspan="2"  class="tb-h" style="text-align: center; font-size:18px;">5층</th>
                          </tr>
                          <tr>
                            <td  style="width:70%; color:rgb(71, 71, 232); font-weight: 600;" >정상출입자</td>
                            <td style="color: rgb(71, 71, 232); font-weight: 600;"><%=floorInfo_5F.cnt_code3 %>명</td>
                          </tr>
                          <tr>
                            <td  style="width:70%; color:rgb(255, 179, 36); font-weight: 600;" >보안구역부근 출입자</td>
                            <td  style="color: rgb(255, 179, 36); font-weight: 600;"><%=floorInfo_5F.cnt_code4 %>명</td>
                          </tr>
                          <tr>
                            <td  style="width:70%; color:rgb(251, 81, 81); font-weight: 600;" >보안구역진입 출입자</td>
                            <td  style="color: rgb(251, 81, 81); font-weight: 600;"><%=floorInfo_5F.cnt_code5 %>명</td>
                          </tr>
                          <tr>
                            <td  style="width:70%; font-weight: 600;" >전체출입자</td>
                            <td  style="font-weight: 600;"><%=floorInfo_5F.cnt_all_5%>명</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>
                  <!--출입자 현황 끝-->

                  <div class="box" id="user-box" style="display:none;">
                    <div class="box-body" id="user-info-body">
                       <!--출입자 정보-->
                     
                       
      
                    </div>
                  </div>
                  <!--출입자 정보 끝-->


                </div>

              </div>
              

            </div><!-- /.col -->
          </div><!-- /.row -->
        </section><!-- /.content -->
      </div><!-- /.content-wrapper -->
      <footer class="main-footer">
        <div class="pull-right hidden-xs">
          <b>Version</b> 2.0
        </div>
        <strong>Copyright &copy; 2020 <a href="http://hubilon.com">Hubilon</a>.</strong> All rights reserved.
      </footer>
        
    </div><!-- ./wrapper -->

    <!-- jQuery 2.1.3 -->
    <script src="/static/plugins/jQuery/jQuery-2.1.3.min.js"></script>
    <!-- Bootstrap 3.3.2 JS -->
    <script src="/static/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- DATA TABES SCRIPT -->
    <script src="/static/plugins/datatables/jquery.dataTables.js" type="text/javascript"></script>
    <script src="/static/plugins/datatables/dataTables.bootstrap.js" type="text/javascript"></script>
    <!-- SlimScroll -->
    <script src="/static/plugins/slimScroll/jquery.slimscroll.min.js" type="text/javascript"></script>
    <!-- FastClick -->
    <script src='/static/plugins/fastclick/fastclick.min.js'></script>
    <!-- AdminLTE App -->
    <script src="/static/dist/js/app.min.js" type="text/javascript"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="/static/dist/js/demo.js" type="text/javascript"></script>
    <!-- page script -->
    <script type="text/javascript">
      $(function () {
        $("#example1").dataTable();
        $('#example2').dataTable({
          "bPaginate": true,
          "bLengthChange": false,
          "bFilter": false,
          "bSort": true,
          "bInfo": true,
          "bAutoWidth": false
        });
      });
    </script>
     <script>
      $(function(){
          //전체선택 및 전체 해제
          $('input#checkedAll').click(function(){
            if($('#checkedAll').is(':checked')){
    
              $("input[type='checkbox']").prop('checked',true);
            }else{
              $("input[type='checkbox']").prop('checked', false);
            }
          });
    
          //한개의 체크박스 선택 해제시 전체 체크박스도 해제
          $("input.chk-sub").click(function(){
            if($('input.chk-sub:checked').length ==4){
              $('#checkedAll').prop('checked', true);
            }else{
              $('#checkedAll').prop('checked', false);
            }
          });
        });
      </script>
    <script>
      
    var zoneArray = []; 
    $(function(){
      //보안구역 정보
      <% if( results !=null ) {%>
        <% for(let data of results) { %>
            var zone ={
              "zoneName" : '<%=data.zone_name%>',
              "c1Long" : '<%=data.c1_long%>',
              "c1Lat" : '<%=data.c1_lat%>',
              "c1R1" : '<%=data.c1_r1%>',
              "c1R2" : '<%=data.c1_r2%>',
              "c2Long" : '<%=data.c2_long%>',
              "c2Lat" : '<%=data.c2_lat%>',
              "c2R1" : '<%=data.c2_r1%>',
              "c2R2" : '<%=data.c2_r2%>'
              };
            zoneArray.push(zone);
        <%} %>
                      
      <%}%>
                   
    });
    
      
      var historicalOverlay;
       var map;
      
       var markers = [];
       var zoneCircles = [];
       var clickedMarker;
       
       var socket = io();
      //  socket.emit('join' );   

       var userLocations={};


        // This example adds a UI control allowing users to remove the
        // ground overlay from the map.
        
        var floor = '';

        var len = 4;

        var code =['all'];
        $(function(){

           //검색 필터 적용
           $("input[type='checkbox']").on("click", function(){
            //한개만 체크되어있을 경우
            if($('input.chk-sub:checked').length ==1){
              code = [];
              $("input:checkbox:checked").each(function (index) {  
                  code.push($(this).val());                 
              });  
              len = 1;
            }else if($('input.chk-sub:checked').length ==2){
              code = [];
              $("input:checkbox:checked").each(function (index) {  
                code.push($(this).val());                            
              }); 
              len = 2;       
            }else if($('input.chk-sub:checked').length ==3){
              code = [];
              $("input:checkbox:checked").each(function (index) {  
                code.push($(this).val());      
                }); 
              len = 3;                     
            }else if($('input.chk-sub:checked').length ==4){
              code = [];
              code.push('all');
              len = 4;
            }else {
              code = [];
              code.push('');
              len = 0;
            }

              if($('input[name=toggle]:checked').val()=='true'){
              floor ='5F';
              socket.emit('select', {floorInf : '5F', statusCode : code, length: len});
      
              }else if($('input[name=toggle]:checked').val() == 'false'){
                floor ='1F';
                socket.emit('select', {floorInf : '1F', statusCode : code, length: len});
            } 
          });

          var time = Number('<%=time%>')*1000;
          //갱신 시간 설정
          $('#up-scd-btn').click(function(){
              var updateScd = $('#update-scd').val();
                $.ajax({
                url: '/vstrLocation/setTime',
                data: { 'updateScd' : updateScd},
                type: 'POST',
                dataType: 'json',
                success : function (res) {
                  
                  if ( res.msg == 'success' ) {
                    alert("변경되었습니다.");
                    location.reload();
                  }
                },
                error: function (xhr) {
                    alert("실패하였습니다.");
                }
            });
          });

          //위치 정보 조회 
          setInterval( function(){
             if($('input[name=toggle]:checked').val()=='true'){
              floor ='5F';
              socket.emit('select', {floorInf : '5F', statusCode : code, length: len});
      
            }else if($('input[name=toggle]:checked').val() == 'false'){
                floor ='1F';
                socket.emit('select', {floorInf : '1F', statusCode : code, length: len});
            } 
            
          }, time);

        });
        
        socket.on('receive', function (data) {   
             
          userLocations = data.result;
          //기존 마커 삭제
          deleteMarkers(); 
          //유저 마커 표시
          addMarker(map, userLocations, floor);
        });

    

       function initMap() {
        var minZoomLevel =21;
        map = new google.maps.Map(document.getElementById('map'), {
          //처음 줌 값. 숫자가 작을수록 낮은 배율
          zoom: minZoomLevel,
          center: {lat: 37.489104, lng: 127.031391}


        });

        addZone(map);
        
        //socket.io
        var userLocations={};
   
        socket.emit('select', {floorInf : '5F', statusCode : 'all', length: 4});
       
        socket.on('receive', function (data) {
          userLocations = data.result;
          
          //유저 마커 표시
          addMarker(map, userLocations, '5F');
        });


    

        var imageBounds = {
          north: 37.489330,
          south: 37.488932,
          east: 127.0315990,
          west: 127.0312394

        };


        google.maps.event.addListener(map, 'zoom_changed', function() {
        if (map.getZoom() < minZoomLevel) map.setZoom(minZoomLevel);
        });
        historicalOverlay = new google.maps.GroundOverlay(
          '/static/images/map_new2.png',
            imageBounds);

        //이미지 오버레이
         addOverlay();
        
      }
      //5층 버튼 클릭시
      async function addOverlay() {
        $('input#toggle-on').prop("checked", false);
        $('input#toggle-off').prop("checked", true);
        await deleteMarkers(); 
        await addZone(map);
        socket.emit('select', {floorInf : '5F', statusCode : code, length: len});
        await historicalOverlay.setMap(map);
      }
      //1층 버튼 클릭시
      async function removeOverlay() {
        $('input#toggle-on').prop("checked", true);
        $('input#toggle-off').prop("checked", false);
        //기존 마커 삭제
        await deleteMarkers(); 
        await historicalOverlay.setMap(null);
        socket.emit('select', {floorInf : '1F', statusCode : code, length: len});
        await deleteCircles();
      }
      /*zone circle 시작*/
      function addZone(map){
          //zone 표시
          for (var i =0; i< zoneArray.length; i++) {
       
            /*보안구역부근 원1 */
            var zoneCircle3 = new google.maps.Circle({
            strokeColor: 'rgb(255, 179, 36)',
            strokeOpacity: 0.3,
            strokeWeight: 0,
            fillColor: 'rgb(255, 179, 36)',
            fillOpacity: 0.25,
            map: map,
            center: {lat : Number(zoneArray[i].c1Lat), lng: Number(zoneArray[i].c1Long) },
            radius: Number(zoneArray[i].c1R2)
          });
          /*보안구역부근 원2 */
          var zoneCircle4 = new google.maps.Circle({
            strokeColor: 'rgb(255, 179, 36)',
            strokeOpacity: 0.3,
            strokeWeight: 0,
            fillColor: 'rgb(255, 179, 36)',
            fillOpacity: 0.25,
            map: map,
            center: {lat : Number(zoneArray[i].c2Lat), lng: Number(zoneArray[i].c2Long) },
            radius: Number(zoneArray[i].c2R2)
          });
          
          /*보안구역진입 원1 */ 
          var zoneCircle1 = new google.maps.Circle({
            strokeColor: '#ff0000e0',
            strokeOpacity: 0.8,
            strokeWeight: 0,
            fillColor: '#ff0000e0',
            fillOpacity: 0.25,
            map: map,
            center: {lat : Number(zoneArray[i].c1Lat), lng: Number(zoneArray[i].c1Long) },
            radius: Number(zoneArray[i].c1R1)
          });
            /*보안구역진입 원2 */
          var zoneCircle2 = new google.maps.Circle({
            strokeColor: '#ff0000e0',
            strokeOpacity: 0.8,
            strokeWeight: 0,
            fillColor: '#ff0000e0',
            fillOpacity: 0.25,
            map: map,
            center: {lat : Number(zoneArray[i].c2Lat), lng: Number(zoneArray[i].c2Long) },
            radius: Number(zoneArray[i].c2R1)
          });
        

          zoneCircles.push(zoneCircle1);
          zoneCircles.push(zoneCircle2); 
          zoneCircles.push(zoneCircle3); 
          zoneCircles.push(zoneCircle4);  
        }

      }

      /*zone circle 끝*/


      /*마커 시작*/
      function addMarker(map, userLocations, floor){ 

          //1층 출입 마커
          var icon1 = '/static/images/L1.png';
          //5층 정상출입 마커
          var icon2 = '/static/images/L2.png';
          //5층 보안구역부근 마커
          var icon3 = '/static/images/L3.png';
          //5층 보안구역진입 마커
          var icon4 = '/static/images/L4.png';

       
          if(userLocations != null){
            for (var i = 0; i < userLocations.length ; i++) {
    
              
              //마커 이미지
              var customicon = {  url:'', scaledSize: new google.maps.Size(40, 42) };
              var userColor ='';
              var statusName= '';
              switch(userLocations[i].status_code){
                case 'VSCD002' : customicon.url = icon1; statusName ='1층 출입'; userColor='rgb(95, 126, 150)'; break;   
                case 'VSCD003' : customicon.url = icon2; statusName ='정상 출입'; userColor='rgb(71, 71, 232)'; break;
                case 'VSCD004' : customicon.url = icon3; statusName ='보안구역부근'; userColor='rgb(255, 179, 36)'; break;
                case 'VSCD005' : customicon.url = icon4; statusName ='보안구역진입'; userColor='rgb(251, 81, 81)'; break;
                
              }


              var userLng = userLocations[i].user_long;
             var userLat = userLocations[i].user_lat;
             var userPhone = userLocations[i].user_phone;
             var userDept = userLocations[i].user_dept;
             var userName = userLocations[i].user_name;
             var floorInf = userLocations[i].floor_inf;
             var updateDate = userLocations[i].update_date;
             var userInfo = { userPhone : userPhone, userLng: userLng, userLat : userLat, userDept:userDept, userName:userName, floorInf:floorInf, updateDate:updateDate, userColor: userColor, statusName : statusName};
    
             if(userPhone == clickedMarker){
                //마커 생성
                var  marker = new google.maps.Marker({
                      //마커의 위치
                      position: new google.maps.LatLng(userLat,  userLng),
                      
                      //마커 아이콘
                      icon: customicon,
                      
                      //마커를 표시할 지도
                      map: map,
                      
                      label: { text : "V", color: '#90fb5e'},
   
                      title : userLocations[i].user_phone,

                      userInfo : userInfo,

                      id : userLocations[i].user_phone
                  });
             } else{
               //마커 생성
              var  marker = new google.maps.Marker({
                    //마커의 위치
                    position: new google.maps.LatLng(userLat,  userLng),
                    
                    //마커 아이콘
                    icon: customicon,
                    
                    //마커를 표시할 지도
                    map: map,
                
                    title : userLocations[i].user_phone,
  
                    userInfo : userInfo,
  
                    id : userLocations[i].user_phone
                });

             }

              markers.push(marker);
 
     
              // infowindow.open(map, marker ); 
              marker.addListener('click', function() {               
                      //중심 위치를 클릭된 마커의 위치로 변경
                      map.setCenter(this.getPosition());
                      //마커 클릭 시의 줌 변화
                      map.setZoom(22);
                    
                      $('#user-info').remove();
                      var userInfo = '<table class="table table-bordered" id="user-info"  style="text-align:center; margin-bottom:20px; "><tbody>'+
                                        '<tr><th colspan="2" id="user-color"  class="tb-h" style="text-align: center;">출입자 번호 : <span id="user-phone">'+this.userInfo.userPhone+'</span></th></tr>'+
                                        '<tr><td class="user-t" > 소속</td><td><span id="user-dept">'+this.userInfo.userDept+'</span></td></tr>'+
                                        '<tr><td class="user-t"  > 이름</td><td><span id="user-name">'+this.userInfo.userName+'</span></td></tr>'+
                                        '<tr><td class="user-t"> 위치</td><td><span id="floor">'+this.userInfo.floorInf+'</span></td></tr>'+
                                        '<tr><td class="user-t" > 출입자상태</td><td><span id="user-status">'+this.userInfo.statusName+'</span></td></tr>'+
                                        '<tr><td class="user-t" > 위치갱신시간</td><td><span id="update-date">'+this.userInfo.updateDate+'</span></td></tr>'+
                                        '</tbody></table>';
                      
                      $('#user-info-body').append(userInfo);
                      
                      $('#user-box').css("display", "block");   
                      $('#user-color').css("background-color", this.userInfo.userColor);   
                        
                      //인포 윈도우 생성
                    var txt =  '<div class="txt">' +
                              '<span style="font-weight: 410; padding-top: 5px; display: block;">출입자 번호 : '+ this.userInfo.userPhone+' </span>'+
                              '<span style="font-weight: 410; padding-top: 5px; display: block;">출입자 상태 : '+this.userInfo.statusName+'</span>'+
                              '</div>';
                    clickedMarker = this.userInfo.userPhone;
                    var infowindow = new google.maps.InfoWindow({

                        content : txt

                      });
                      infowindow.open(map, this ); 
                  });
            }

          }
          

        }
        /*마커 끝*/

         /* 마커 지우기 */
      // Sets the map on all markers in the array.
      function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(map);
        }
      }
      // Removes the markers from the map, but keeps them in the array.
      function clearMarkers() {
        setMapOnAll(null);
      }
     // Deletes all markers in the array by removing references to them.
     function deleteMarkers() {
        clearMarkers();
        markers = [];
      }


        /* zone 지우기 */
      // Sets the map on all markers in the array.
      function z_setMapOnAll(map) {
        for (var i = 0; i <  zoneCircles.length; i++) {
          zoneCircles[i].setMap(map);
        }
      }
      // Removes the markers from the map, but keeps them in the array.
      function clearCircles() {
        z_setMapOnAll(null);
      }
     // Deletes all markers in the array by removing references to them.
     function deleteCircles() {
        clearCircles();
        zoneCircles = [];
      }
    </script>

    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBt_mimxh7G5RIqBNeoq_vkoNM3F0Wsbmw&callback=initMap">
    </script>
  
  <script>
    //검색 기능
    function search(t){

      if(window.event.keyCode == 13){
        var keyword = $(t).val();
        if(keyword==''){
          alert("검색어를 입력하세요!");
          return false;
        }else{
   
          for (var i = 0; i < markers.length; i++) {
                if(markers[i].title == keyword){
                   //중심 위치를 클릭된 마커의 위치로 변경
                   map.setCenter(markers[i].getPosition());
                    //마커 클릭 시의 줌 변화
                  map.setZoom(22);
                      $('#user-info').remove();
                      var userInfo = '<table class="table table-bordered" id="user-info"  style="text-align:center; margin-bottom:20px; "><tbody>'+
                                        '<tr><th colspan="2" id="user-color"  class="tb-h" style="text-align: center;">출입자 번호 : <span id="user-phone">'+markers[i].userInfo.userPhone+'</span></th></tr>'+
                                        '<tr><td class="user-t" > 소속</td><td><span id="user-dept">'+markers[i].userInfo.userDept+'</span></td></tr>'+
                                        '<tr><td class="user-t"  > 이름</td><td><span id="user-name">'+markers[i].userInfo.userName+'</span></td></tr>'+
                                        '<tr><td class="user-t"> 위치</td><td><span id="floor">'+markers[i].userInfo.floorInf+'</span></td></tr>'+
                                        '<tr><td class="user-t" > 출입자상태</td><td><span id="user-status">'+markers[i].userInfo.statusName+'</span></td></tr>'+
                                        '<tr><td class="user-t" > 위치갱신시간</td><td><span id="update-date">'+markers[i].userInfo.updateDate+'</span></td></tr>'+
                                        '</tbody></table>';

                      $('#user-info-body').append(userInfo);
                      
                      $('#user-box').css("display", "block");   
                      $('#user-color').css("background-color", markers[i].userInfo.userColor);  
                      
                      var txt =  '<div class="txt">' +
                      '<span style="font-weight: 410; padding-top: 5px; display: block;">출입자 번호 : '+markers[i].userInfo.userPhone+' </span>'+
                      '<span style="font-weight: 410; padding-top: 5px; display: block;">출입자 상태 : '+markers[i].userInfo.statusName+'</span>'+
                      '</div>';

                      clickedMarker = markers[i].userInfo.userPhone;
                      var infowindow = new google.maps.InfoWindow(
                      {

                        content : txt

                      });

                    infowindow.open(map, markers[i]);
                  
                  return false;
                }
          }
         alert('해당 정보가 없습니다.');
         return false;
        }
      }
    }
  </script>

 
  </body>
</html>
